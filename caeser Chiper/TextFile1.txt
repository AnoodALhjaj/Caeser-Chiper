using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace caeser_Chiper
{
    public partial class Form1 : Form
    {
        IDictionary<int, string> dict = new Dictionary<int, string>();
        string[] lines = System.IO.File.ReadAllLines(@"words.txt", Encoding.UTF8);
        public Form1()
        {
            InitializeComponent();
            letter();
        }

        public int letter()
        {
            dict.Add(1, "A");
            dict.Add(2, "B");
            dict.Add(3, "C");
            dict.Add(4, "D");
            dict.Add(5, "E");
            dict.Add(6, "F");
            dict.Add(7, "G");
            dict.Add(8, "H");
            dict.Add(9, "I");
            dict.Add(10, "J");
            dict.Add(11, "K");
            dict.Add(12, "L");
            dict.Add(13, "M");
            dict.Add(14, "N");
            dict.Add(15, "O");
            dict.Add(16, "P");
            dict.Add(17, "Q");
            dict.Add(18, "R");
            dict.Add(19, "S");
            dict.Add(20, "T");
            dict.Add(21, "U");
            dict.Add(22, "V");
            dict.Add(23, "W");
            dict.Add(24, "X");
            dict.Add(25, "y");
            dict.Add(26, "Z");
            return 0;
        }
        public  String let_num(char lett , string ke)
        {
            string let=lett.ToString();
            labei
            for (int i = 0; i <= dict.Count; i++)
            {
                if (dict[i] ==let.ToUpper())
                {
                    label1.Text += keytest(i,ke);
                    
                }

            }
            return label1.Text;
        }
        public int key(char lett)
        {
            for(int j=1 ;j<500;j++){
            string g=let_num(lett, j.ToString());
                for (int i = 0; i <= j; i++)
                {
                    if (g == lines[i].ToString())
                    {
                        textBox2.Text = j.ToString();
                        return 0;
                    }
                    
                }
            }
            return 0;
        }
        public String keytest(int num,string key)
        {
            int ke = int.Parse(key);
            if (num - ke <= 0)
            {
                return dict[(ke - num) % 26];
            }
            return dict[(num - ke) % 26];
            
        }
        private void button1_Click(object sender, EventArgs e)
        {
            String letters = textBox1.Text;//get all the letters
           
            foreach (char i in letters){
                if (char.IsLetter(i))
                {
                    key(i);
                }
            }

            
        }

        private void button2_Click(object sender, EventArgs e)
        {
            Form1 f = new Form1();
            Form2 f2 = new Form2();
            f.Close();
            f2.Show();
        }
    }
}
